// Base
@import "tbpro/fonts.less";
@import "tbpro/colours.less";

// ------------------------------------------------------------
// border-box, everywhere
// ------------------------------------------------------------
*, *::before, *::after { box-sizing: border-box; }


// Where should fonts go?

:root {
    --font-content: 'Inter', sans-serif;
    --font-titles: 'Metropolis', sans-serif;
}

body {
    font-family: var(--font-content);
    color: var(--color-text-base);
}


// Breakpoints (assumes 16px root)
@xs-min: 23.4375rem;   // 375px
@xs-max: 37.4375rem;   // 599px
@md-min: 37.5rem;      // 600px
@md-max: 79.9375rem;   // 1279px
@lg-min: 80rem;        // 1280px

// Global spacing
@gutter: 16px;

@space-3: 0.1875rem;
@space-6: 0.375rem;
@space-9: 0.5625rem;
@space-12: 0.75rem;
@space-18: 1.125rem;
@space-24: 1.5rem;
@space-36: 2rem;
@space-48: 2.75rem;
@space-72: 4rem;
@space-96: 6rem;
@space-144: 9rem;
@space-192: 12rem;
@space-max: 18rem;


// ------------------------------------------------------------
// Helpers
// ------------------------------------------------------------

// Generates prefixed span classes: .col.xs-1, .col.md-4, etc.
.generate-prefixed-spans(@prefix, @i, @cols) when (@i > 0) {
  .col.@{prefix}-@{i} {
    width: calc(
      ((100% - ((@cols - 1) * @gutter)) / @cols) * @i
      + (@gutter * (@i - 1))
    );
  }
  .generate-prefixed-spans(@prefix, (@i - 1), @cols);
}

// Generates prefixed offset classes: .col.xs-offset-1, .col.md-offset-4, etc.
// Uses "no @margin in calc" math (container padding handled via border-box).
.generate-prefixed-offsets(@prefix, @i, @cols) when (@i > 0) {
  .col.@{prefix}-offset-@{i} {
    margin-inline-start: calc(
      ((100% - ((@cols - 1) * @gutter)) / @cols) * @i
      + (@gutter * @i)
    );
  }
  .generate-prefixed-offsets(@prefix, (@i - 1), @cols);
}

// ------------------------------------------------------------
// Grid structure
// ------------------------------------------------------------
.grid-row(@gutter) {
  display: flex;
  flex-wrap: wrap;
  column-gap: @gutter;
  row-gap: @gutter;
}

.grid-container(@max-width, @padding-inline) {
  margin-inline: auto;
  max-width: @max-width;
  padding-inline: @padding-inline;
  box-sizing: border-box;
}

.grid {
  .row { .grid-row(@gutter); }
  .col { flex: 0 0 auto; }
}

// xs: 375–599px
@media (min-width: @xs-min) and (max-width: @xs-max) {
  @xs-cols: 4;
  @xs-padding: 16px;

  .grid {
    .container { .grid-container(100%, @xs-padding); }
    .generate-prefixed-spans(xs, @xs-cols, @xs-cols);
    .generate-prefixed-offsets(xs, (@xs-cols - 1), @xs-cols); // xs-offset-1..3
  }
}

// fluid for in-between sizes: 600–1279px
@media (min-width: @md-min) and (max-width: @md-max) {
  @md-cols: 12;
  @md-padding: clamp(16px, 3vw, 32px);

  .grid {
    .container { .grid-container(100%, @md-padding); }
    .generate-prefixed-spans(md, @md-cols, @md-cols);
    .generate-prefixed-offsets(md, (@md-cols - 1), @md-cols); // md-offset-1..11
  }
}

// lg: ≥1280px
@media (min-width: @lg-min) {
  @lg-cols: 12;
  @lg-padding: 32px;

  .grid {
    .container { .grid-container(@lg-min, @lg-padding); }
    .generate-prefixed-spans(lg, @lg-cols, @lg-cols);
    .generate-prefixed-offsets(lg, (@lg-cols - 1), @lg-cols); // lg-offset-1..11
  }
}



// ---- move this to its own file?

#main-content {
    background-color: #18181b;
    // this should probably be a gradient, since it covers #masthead and #features.
    // It might continue as if the white background isn't there
    padding-inline: @gutter;
}

header#masthead {
    --hero-img: url('/media/img/thunderbird/tbpro/orb-graphic-hi-res.png');
    --button-text-color: #1A202C;
    --color-left-blue: #b4e7ff;
    --color-right-blue: rgba(180, 231, 255, 0.9);
    --color-mid-left-purple: rgba(221, 180, 254, 0.7);



    .hero-image {
        width: 361px;
        height: 351px;
        margin-left: @gutter;
        // background-image: var(--hero-img);
        background-image: url('/media/img/thunderbird/tbpro/orb-graphic-hi-res.png');
        background-position: top center;
        background-size: contain;
        background-repeat: no-repeat;

    }
    .hero-text {
        font-family: var(--font-titles);

        h1 {
            text-shadow: 0 4px 2px rgba(0, 0, 0, 0.05);
            white-space: pre;
            font-weight: lighter;
        }

        .txt-gradient {
            color: transparent;
            -webkit-background-clip: text;
            background-clip: text;
            background-image: linear-gradient(to right,
                                              var(--color-left-blue),
                                              var(--color-mid-left-purple));
            display: block;
        }
    }

    .cta-button {
      margin-top: 3rem;
      display: flex;
      gap: 1rem;
      justify-content: center;
      padding: 1.125rem 2rem;

      // Text
      color: var(--button-text-color);
      text-shadow: 0.03125rem 0.03125rem 0 rgba(255, 255, 255, 0.10);
      font-size: 1rem;
      font-style: normal;
      font-weight: 600;
      line-height: normal;
      letter-spacing: 0.03rem;
      text-transform: uppercase;
      text-decoration: none;

      width: 50%;

      &:hover {
        text-decoration: none;
      }

      // Button
      background: linear-gradient(329deg, #1373D9 -21.06%, #58C9FF 64%) padding-box,
      linear-gradient(247deg, rgba(43, 140, 220, 1) 0%, rgba(0, 102, 255, 0) 10%, rgba(0, 102, 255, 0) 90%, rgba(43, 140, 220, 1) 100%) border-box;
      border: 0.0625rem solid transparent;
      border-radius: 1rem;
    }
}

section#features {
    padding-bottom: @space-72;

    .feature-card {
        border-radius: 1.5rem;
        // backdrop-filter: blur(24px);
        box-shadow: inset 0 0 74px 0 rgba(0, 0, 0, 0.05);
        padding: @space-24;

        // This is the real value from zeplin
        // border: solid 1px rgba(255, 255, 255, 0.05);
        // debug value
        border: solid 1px rgba(255, 255, 255);

        color: var(--color-text-base);

        display: flex;
        flex-direction: column;
        gap: @space-18;

        // Space above a feature card, if there's a previous one.
        &+.feature-card {
            margin-top: @gutter;
        }

        .card-info {
            .card-header {
                display: flex;
                gap: @gutter;

                // debug
                border: 1px solid red;
                .app-icon {
                    flex: 0 0 auto;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    aspect-ratio: 1 / 1;

                    // debug
                    height: 48px;
                    width: 48px;
                    // background-color: red;
                    border: 1px solid red;
                }
                .app-header {
                    flex: 1;
                    display: flex;
                    gap: 4px;
                    flex-direction: column;

                    & > * {
                        display: block;
                        margin: 0;
                    }

                    .app-name {
                        color: var(--color-text-highlight);
                        text-transform: uppercase;
                        font-size: .75rem;
                    }
                    .app-tagline {
                        font-size: 1.5rem;
                    }
                }
            }
            .card-body {
            }
        }
        .card-image {
            min-height: 100px;
            outline: 1px solid blue;

        }

    }

    // still figuring out the gradients used.
    .feature-card-1 {
    //     background-image: linear-gradient(339deg, #0f1623 87%, #06090e 79%, #06090e 14%, #1373d9 0%);
    }
    .feature-card-2 {
    //     background-image: linear-gradient(338deg, #0f1623 85%, #06090e 77%, #06090e 14%, #008080 0%);
    }
    .feature-card-3 {
        // background-image: linear-gradient(336deg, #0f1623 83%, #06090e 76%, #06090e 14%, #fec18a 1%);
        // backdrop-filter: blur(24px);
        // background-image: linear-gradient(337deg, #0f1623 85%, #06090e 77%, #06090e 14%, #008080 0%);
    }
}

section#reasons {
    background: #fff;
    padding-inline: @gutter;
    padding-block: @space-36 @space-24;
    color: #4c4d58; //var(--color-text-secondary);

    display: grid;
    row-gap: @space-24;
    counter-reset: reason;

    & > header {
        margin: 0;
        color: var(--color-primary-default);
        text-align: center;
        font-size: 2rem;
        font-weight: normal;
        font-stretch: normal;
        font-style: normal;
        line-height: 1.2;
        letter-spacing: -0.32px;
    }

    .reason {
        counter-increment: reason;
        display: grid;
        grid-template-columns: auto 1fr;
        column-gap: @space-18;
        align-items: start;
        position: relative;

        &::before {
            content: counter(reason, decimal-leading-zero);
            font-variant-numeric: tabular-nums;
            font-weight: 600;
            margin-inline-end: @space-18;
            line-height: 1.5rem;
            grid-column: 1;
        }
        .reason-content {
            grid-column: 2;
            row-gap: @space-9;

        }
        .reason-title {
            font-size: 1.5rem;
            font-weight: normal;
            font-stretch: normal;
            font-style: normal;
            line-height: 1.1;
            margin: 0;
        }
        p {
            font-size: 0.875rem;
        }
    }
}

section#faq {
    padding-top: @space-36;
    margin-bottom: @space-72; // debug only
    header {
        margin-bottom: @space-9;
        font-size: 2rem;
        line-height: 1.2;
    }

    .faq-item {
        // --icon-closed: url('faq-open.svg');
        // --icon-open: url('faq-closed.svg');

        padding-block: @gutter;
        border-bottom: 1px solid rgba(88, 201, 255, 0.2);

        .faq-question {
            list-style: none;
            cursor: pointer;
            display: flex;
            align-items: start;
            justify-content: space-between;
            gap: @space-18;

            &::after {
                content: "+";
                flex-shrink: 0;
                display: grid;
                place-items: center;

                inline-size: 2rem;
                block-size: 1rem;

                // transition: transform .1s;

                // mask: var(--icon-closed) center / contain no-repeat;
                // background: currentColor;

            }
            border: 1px solid white;

        }
        &[open] .faq-question {
            border: 1px solid red;
        }

        // After getting real assets, swap out the image instead of rotating.
        // &[open] .faq-question::after { transform: rotate(270deg); }

    }

}
